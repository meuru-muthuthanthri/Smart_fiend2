/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package smartfriend.util.general;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MediaPlayer2.java
 *
 * Created on Nov 15, 2014, 9:42:44 PM
 */


import java.awt.event.ActionEvent;
import smartfriend.util.general.MainConfiguration;
import com.sun.jna.NativeLibrary;
import java.awt.BorderLayout;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import uk.co.caprica.vlcj.binding.internal.libvlc_media_t;
import uk.co.caprica.vlcj.player.MediaPlayer;
import uk.co.caprica.vlcj.player.MediaPlayerEventAdapter;
import uk.co.caprica.vlcj.player.MediaPlayerEventListener;
import uk.co.caprica.vlcj.player.MediaPlayerFactory;
import uk.co.caprica.vlcj.player.embedded.EmbeddedMediaPlayer;
import uk.co.caprica.vlcj.player.embedded.videosurface.CanvasVideoSurface;
import uk.co.caprica.vlcj.player.embedded.windows.Win32FullScreenStrategy;

/**
 *
 * @author Keshani
 */
public class MediaContentPlayer extends javax.swing.JPanel implements MediaPlayerEventListener {

    /** Creates new form player */
    MediaPlayerFactory mediaPlayerFactory;
    private EmbeddedMediaPlayer mediaPlayer;
    private boolean playerOpen;
    private JFrame frame;


    public MediaContentPlayer() throws IOException, InterruptedException {
        playerOpen = false;
        NativeLibrary.addSearchPath("libvlc", MainConfiguration.getCurrentDirectory() + MainConfiguration.getInstance().getProperty("libvlc"));
        MediaPlayerFactory mediaPlayerFactory = new MediaPlayerFactory();
        
//        
//         new EmbeddedMediaPlayerComponent() {
//    public void finished(MediaPlayer mediaPlayer) {
//        ourMediaPlayer.release(); // In practice, this line is optional
//        System.exit(0);
//    }
        
        
        mediaPlayer = mediaPlayerFactory.newEmbeddedMediaPlayer();
        mediaPlayer.addMediaPlayerEventListener(this);

        Canvas c = new Canvas();
        c.setBackground(Color.GREEN);
        this.setLayout(new BorderLayout());
        this.add(c, BorderLayout.CENTER);

        c.setSize(1366, 800);
        this.setSize(1366, 800);
        mediaPlayer.setVideoSurface(mediaPlayerFactory.newVideoSurface(c));
        c.setVisible(true);
        this.setVisible(true);
    }

    public EmbeddedMediaPlayer getPlayer() {
        return mediaPlayer;
    }
      
/*
   play video  
*/
    public void playVideo(String filePath, JPanel content) {
        System.out.println("Playing video");
        this.setBounds(0, 0, 1366, 800);
        content.add(this);
        this.getPlayer().playMedia(filePath.replace("/", "\\"));
       
    }

    public void closePlayer() {
        this.hide();
        mediaPlayer.release();
        

    }
/*
Check whether player is open or not
*/
    public boolean isOpen() {
        playerOpen = mediaPlayer.isPlaying();
        return playerOpen;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
                    

    @Override
    public void mediaChanged(MediaPlayer mp, libvlc_media_t l, String string) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void opening(MediaPlayer mp) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void buffering(MediaPlayer mp, float f) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void playing(MediaPlayer mp) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void paused(MediaPlayer mp) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void stopped(MediaPlayer mp) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void forward(MediaPlayer mp) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void backward(MediaPlayer mp) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void finished(MediaPlayer mp) {
        System.out.println("alooooooooooooo");
        this.hide();
        
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void timeChanged(MediaPlayer mp, long l) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void positionChanged(MediaPlayer mp, float f) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void seekableChanged(MediaPlayer mp, int i) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void pausableChanged(MediaPlayer mp, int i) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void titleChanged(MediaPlayer mp, int i) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void snapshotTaken(MediaPlayer mp, String string) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void lengthChanged(MediaPlayer mp, long l) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void videoOutput(MediaPlayer mp, int i) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void error(MediaPlayer mp) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mediaMetaChanged(MediaPlayer mp, int i) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mediaSubItemAdded(MediaPlayer mp, libvlc_media_t l) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mediaDurationChanged(MediaPlayer mp, long l) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mediaParsedChanged(MediaPlayer mp, int i) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mediaFreed(MediaPlayer mp) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mediaStateChanged(MediaPlayer mp, int i) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void newMedia(MediaPlayer mp) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void subItemPlayed(MediaPlayer mp, int i) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void subItemFinished(MediaPlayer mp, int i) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void endOfSubItems(MediaPlayer mp) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    
    
}

